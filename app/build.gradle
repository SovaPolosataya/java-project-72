import org.gradle.api.tasks.testing.logging.TestExceptionFormat
//import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id("io.freefair.lombok") version "8.6"
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

application {
    mainClass = 'hexlet.code.App'
}

//compileJava {
//    options.release = 21
//    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
//}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation (platform('org.junit:junit-bom:5.10.0'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation("com.h2database:h2:2.2.224")
    implementation("com.zaxxer:HikariCP:5.1.0")
//    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
//    implementation("org.apache.commons:commons-text:1.11.0")
    implementation("gg.jte:jte:3.1.9")
    implementation("org.slf4j:slf4j-simple:2.0.9")
    implementation("io.javalin:javalin:6.1.3")
    implementation("io.javalin:javalin-testtools:6.1.6")
    implementation("io.javalin:javalin-bundle:6.1.3")
    implementation("io.javalin:javalin-rendering:6.1.3")
    implementation('org.postgresql:postgresql:42.7.2')

    testImplementation("org.assertj:assertj-core:3.25.3")
//    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
//    implementation("org.apache.commons:commons-text:1.11.0")
//    testImplementation("com.squareup.okhttp3:mockwebserver:4.12.0")
//    implementation("com.mashape.unirest:unirest-java:1.3.1")
//    implementation("org.jsoup:jsoup:1.18.1")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        //events = mutableSetOf(TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED)
        //exceptionFormat "full"
        events "failed"
        showStandardStreams = true
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required.set(true)
    }
}
